## ---------------------------------------------------------------------------
## Licensed to the Apache Software Foundation (ASF) under one or more
## contributor license agreements.  See the NOTICE file distributed with
## this work for additional information regarding copyright ownership.
## The ASF licenses this file to You under the Apache License, Version 2.0
## (the "License"); you may not use this file except in compliance with
## the License.  You may obtain a copy of the License at
##
##      http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
## ---------------------------------------------------------------------------

version: '3.4'
services:
  zookeeper:
    image: quay.io/strimzi/kafka:latest-kafka-3.7.0
    logging:
      driver: "none"
    command: [
      "sh", "-c",
      "bin/zookeeper-server-start.sh config/zookeeper.properties"
    ]
    ports:
      - "2181:2181"
    environment:
      LOG_DIR: /tmp/logs
  kafka:
    image: quay.io/strimzi/kafka:latest-kafka-3.7.0
    logging:
      driver: "none"
    command: [
      "sh", "-c",
      "sleep 10s && bin/kafka-server-start.sh config/server.properties --override listeners=$${KAFKA_LISTENERS} --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} --override zookeeper.connect=$${KAFKA_ZOOKEEPER_CONNECT}"
    ]
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      LOG_DIR: "/tmp/logs"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
# TODO: unsupported for now (probably only works on Linux / also very slow)
#  ollama:
#    image: ollama/ollama
#    ports:
#      - "8000:8000"
#    environment:
#      OLLAMA_HOST: ":8000"
  qdrant:
    image: qdrant/qdrant:v1.9.7-unprivileged
    ports:
      - "6333:6333"
      - "6334:6334"
  backend:
    image: quay.io/megacamelus/assistant-backend
    depends_on:
      - ollama
      - qdrant
    ports:
      - "8080:8080"
    environment:
      QUARKUS_PROFILE: "compose"
      # Set this to the URL of your API endpoint
      #_COMPOSE_QUARKUS_LANGCHAIN4J_OPENAI_BASE_URL: http://configureme:49090/v1
  ingestion-sink:
    image: quay.io/megacamelus/assistant-ingestion-sink
    depends_on:
      - kafka
    environment:
      QUARKUS_PROFILE: "compose"
  ingestion-source-plain-text:
    image: quay.io/megacamelus/plain-text-source
    depends_on:
      - kafka
      - qdrant
    ports:
      - "8083:8083"
    environment:
      QUARKUS_PROFILE: "compose"
  ui:
    image: quay.io/megacamelus/assistant-ui-vaadin
    depends_on:
      - backend
    ports:
      - "8081:8081"
    environment:
      QUARKUS_PROFILE: "compose"